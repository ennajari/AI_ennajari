!function() {
    "use strict";
  
    var app = {
        mounted() {
            this.animPreloaderScreen();
            window.addEventListener("load", () => this.initAnimation());
        },
        methods: {
            animPreloaderScreen() {
                let loadedImagesCount = 0;
                const preloader = this.$refs.preloader;
                if (!preloader) return;
  
                const preloaderContent = preloader.querySelector(".preloader-content");
                const images = [...document.images];
                const totalImages = images.length;
  
                const completeLoading = () => {
                    preloader.setAttribute("style", "--loading-percentage: 100%");
                    gsap.timeline()
                        .set(".hide-in-preloading", { autoAlpha: 1 })
                        .to(preloaderContent, { delay: 0.5, autoAlpha: 0 })
                        .to(preloader, { y: "-100%", duration: 1, ease: "expo.in" }, "-=0.5")
                        .set(preloader, { autoAlpha: 0 });
                };
  
                const updateProgress = () => {
                    loadedImagesCount++;
                    this.loadingPercentage = (100 / totalImages * loadedImagesCount) << 0;
                    preloader.setAttribute("style", `--loading-percentage: ${this.loadingPercentage}%`);
                    if (loadedImagesCount === totalImages) completeLoading();
                };
  
                if (totalImages) {
                    images.forEach(img => {
                        const newImg = new Image();
                        newImg.onload = updateProgress;
                        newImg.onerror = updateProgress;
                        newImg.src = img.src;
                    });
                } else {
                    completeLoading();
                }
            },
            initAnimation() {
                gsap.registerPlugin(ScrollTrigger);
                this.animBackTopScrollIndicator();
                this.animStatisticsItems();
                this.animSectionTextBox();
                this.animAboutImage();
                this.animSkillsItems();
                this.animExperienceItemsTimeline();
                this.animTestimonialsSectionTitle();
                this.animTestimonialsItems();
                this.animContactInfo();
                this.animContactForm();
            },
            animBackTopScrollIndicator() {
                const scrollTopBtn = this.$refs.scrollTopBtn;
                if (!scrollTopBtn) return;
  
                const showAt = scrollTopBtn.getAttribute("data-show-at");
                const path = scrollTopBtn.querySelector("path");
                const length = path.getTotalLength();
  
                gsap.from(scrollTopBtn, {
                    ease: "none",
                    duration: 0.3,
                    autoAlpha: 0,
                    y: 10,
                    scrollTrigger: {
                        trigger: "#app-inner",
                        start: `${showAt}px top`,
                        end: "bottom bottom",
                        toggleActions: "play none none reverse"
                    }
                });
  
                gsap.set(path, {
                    strokeDasharray: length,
                    strokeDashoffset: length,
                    scrollTrigger: {
                        trigger: "#app-inner",
                        start: `${showAt}px top`,
                        end: "bottom bottom",
                        onUpdate: evt => path.style.strokeDashoffset = length - evt.progress * length
                    }
                });
            },
            animStatisticsItems() {
                const items = gsap.utils.toArray(".statistics-section .statistics-items li");
                if (!items.length) return;
  
                const tl = gsap.timeline({
                    scrollTrigger: {
                        trigger: ".statistics-items",
                        start: "top 82%",
                        end: "top 50%",
                        scrub: 0.3
                    }
                });
  
                items.forEach((item, index) => {
                    const delay = index === 0 ? "" : "< +=0.2";
                    tl.from(item, { autoAlpha: 0 }, delay)
                       .from(item, { y: 50 }, "<");
                });
            },
            animSectionTextBox() {
                const boxes = gsap.utils.toArray(".text-box-inline");
                boxes.forEach(box => {
                    gsap.timeline({
                        scrollTrigger: {
                            trigger: box,
                            start: "top 85%",
                            end: "top 35%",
                            scrub: 0.3
                        }
                    }).from(box.querySelector(".subtitle"), { autoAlpha: 0, top: 50 })
                      .from(box.querySelector("h2"), { autoAlpha: 0, y: 50 }, "-=0.2")
                      .from(box.querySelectorAll("h2 ~ *"), { autoAlpha: 0, y: 50, stagger: 0.2 }, "-=0.2");
                });
            },
            animAboutImage() {
                if (this.$refs.aboutSection) {
                    gsap.timeline({
                        scrollTrigger: {
                            trigger: ".about-section .about-img",
                            start: "top 80%",
                            end: "top 50%",
                            scrub: 0.3
                        }
                    }).from(".about-section .about-img", { autoAlpha: 0, scale: 0.5 });
                }
            },
            animSkillsItems() {
                const skillLists = gsap.utils.toArray(".skills-section .skills-items ul");
                skillLists.forEach(list => {
                    const tl = gsap.timeline({
                        scrollTrigger: {
                            trigger: ".skills-section .skills-items",
                            start: "top 85%",
                            end: "top 35%",
                            scrub: 0.3
                        }
                    });
                    list.querySelectorAll("li").forEach((item, index) => {
                        const delay = index === 0 ? "" : "< +=0.2";
                        tl.from(item, { autoAlpha: 0 }, delay)
                           .from(item, { y: 50 }, "<");
                    });
                });
            },
            animExperienceItemsTimeline() {
                const timepath = this.$refs.experienceTimepath;
                const items = gsap.utils.toArray(".experience-timeline .timeline-items li");
                let timeline, lineAnimation, circleAnimation;
  
                if (timepath || items.length) {
                    timeline = gsap.timeline({
                        scrollTrigger: {
                            trigger: ".experience-section .experience-timeline",
                            start: "top 85%",
                            end: "top 35%",
                            scrub: 0.3
                        }
                    });
  
                    if (timepath) {
                        const lines = gsap.utils.toArray(".experience-timeline .timepath span");
                        const leftLines = [...timepath.querySelectorAll(".line:nth-of-type(4n + 1)")];
                        const rightLines = [...timepath.querySelectorAll(".line:nth-of-type(4n + 3)")];
                        const leftCircles = [...timepath.querySelectorAll(".semicircle:nth-of-type(4n + 2)")];
                        const rightCircles = [...timepath.querySelectorAll(".semicircle:nth-of-type(4n + 4)")];
  
                        lineAnimation = gsap.timeline();
                        const dir = document.documentElement.dir;
                        const clipPaths = {
                            x: {
                                from: "polygon(0% 0%, 0% 0%, 0% 100%, 0% 100%)",
                                reverse: "polygon(100% 0%, 100% 0%, 100% 100%, 100% 100%)",
                                to: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)"
                            },
                            c: {
                                from: "polygon(0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 75%, 0% 75%, 0% 75%, 0% 75%)",
                                reverse: "polygon(100% 0%, 100% 0%, 100% 0%, 100% 0%, 100% 75%, 100% 75%, 100% 75%, 100% 75%)",
                                to: {
                                    from: {
                                        st1: "polygon(0% 0%, 100% 0%, 100% 0%, 100% 0%, 100% 0%, 75% 25%, 75% 25%, 0% 25%)",
                                        st2: "polygon(0% 0%, 100% 0%, 100% 100%, 100% 100%, 75% 75%, 75% 75%, 75% 25%, 0% 25%)",
                                        st3: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 75%, 75% 75%, 75% 25%, 0% 25%)"
                                    },
                                    reverse: {
                                        st1: "polygon(100% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%, 25% 25%, 25% 25%, 100% 25%)",
                                        st2: "polygon(100% 0%, 0% 0%, 0% 100%, 0% 100%, 25% 75%, 25% 75%, 25% 25%, 100% 25%)",
                                        st3: "polygon(100% 0%, 0% 0%, 0% 100%, 100% 100%, 100% 75%, 25% 75%, 25% 25%, 100% 25%)"
                                    }
                                }
                            }
                        };
  
                        lineAnimation.set(lines, { autoAlpha: 1 })
                                     .set(leftLines, { clipPath: clipPaths.x[dir === "rtl" ? "reverse" : "from"] })
                                     .set(rightLines, { clipPath: clipPaths.x[dir === "rtl" ? "from" : "reverse"] })
                                     .set(leftCircles, { clipPath: clipPaths.c[dir === "rtl" ? "reverse" : "from"] })
                                     .set(rightCircles, { clipPath: clipPaths.c[dir === "rtl" ? "from" : "reverse"] });
  
                        lines.forEach(line => {
                            if (leftLines.includes(line) || rightLines.includes(line)) {
                                lineAnimation.to(line, { clipPath: clipPaths.x.to });
                            } else if (leftCircles.includes(line)) {
                                lineAnimation.to(line, { clipPath: clipPaths.c.to[dir === "rtl" ? "reverse" : "from"].st1 })
                                          .to(line, { clipPath: clipPaths.c.to[dir === "rtl" ? "reverse" : "from"].st2 })
                                          .to(line, { clipPath: clipPaths.c.to[dir === "rtl" ? "reverse" : "from"].st3 });
                            } else if (rightCircles.includes(line)) {
                                lineAnimation.to(line, { clipPath: clipPaths.c.to[dir === "rtl" ? "from" : "reverse"].st1 })
                                          .to(line, { clipPath: clipPaths.c.to[dir === "rtl" ? "from" : "reverse"].st2 })
                                          .to(line, { clipPath: clipPaths.c.to[dir === "rtl" ? "from" : "reverse"].st3 });
                            }
                        });
  
                        timeline.add(lineAnimation);
                    }
  
                    const itemTimeline = gsap.timeline();
                    items.forEach((item, index) => {
                        const delay = index === 0 ? "" : "< +=0.2";
                        itemTimeline.from(item, { autoAlpha: 0 }, delay)
                                    .from(item, { scale: 0.2 }, "<");
                    });
  
                    timeline.add(itemTimeline, "< +=0.5");
                }
            },
            animTestimonialsSectionTitle() {
                if (this.$refs.testimonialsSection) {
                    gsap.timeline({
                        scrollTrigger: {
                            trigger: ".testimonials-section .section-title",
                            start: "top 90%",
                            end: "top 40%",
                            scrub: 0.3
                        }
                    }).from(".testimonials-section .section-title .subtitle", { autoAlpha: 0, top: 50 })
                      .from(".testimonials-section .section-title .title", { autoAlpha: 0, y: 50 }, "< +=0.2");
                }
            },
            animTestimonialsItems() {
                if (!this.$refs.testimonialsSection) return;
  
                const items = gsap.utils.toArray(".testimonials-section .testimonials-item");
                const tl = gsap.timeline({
                    scrollTrigger: {
                        trigger: ".testimonials-section .testimonials-items",
                        start: "top 75%",
                        end: "top 25%",
                        scrub: 0.3
                    }
                });
  
                items.forEach((item, index) => {
                    const delay = index === 0 ? "" : "< +=0.2";
                    tl.from(item, { autoAlpha: 0 }, delay)
                       .from(item, { scale: 0.2 }, "<");
                });
            },
            animContactInfo() {
                const items = gsap.utils.toArray(".contact-section .contact-info li");
                if (!items.length) return;
  
                const tl = gsap.timeline({
                    scrollTrigger: {
                        trigger: ".contact-section .contact-info",
                        start: "top 80%",
                        end: "top 50%",
                        scrub: 0.3
                    }
                });
  
                items.forEach((item, index) => {
                    const delay = index === 0 ? "" : "< +=0.2";
                    tl.from(item, { autoAlpha: 0 }, delay)
                       .from(item, { y: 50 }, "<");
                });
  
                tl.from(".contact-section .contact-text .social li", { autoAlpha: 0 })
                  .from(".contact-section .contact-text .social li", { y: 50, stagger: 0.2 }, "<");
            },
            animContactForm() {
                if (this.$refs.contactForm) {
                    gsap.timeline({
                        scrollTrigger: {
                            trigger: ".contact-section .contact-form",
                            start: "top 80%",
                            end: "top 50%",
                            scrub: 0.3
                        }
                    }).from(".contact-section .contact-form", { autoAlpha: 0, scale: 0.7 });
                }
            }
        }
    };
  
    Vue.createApp({
        mixins: [app],
        data: () => ({
            careerStartDate: 2023,
            copyrightStartDate: 2025,
            appTheme: "light_theme",
            savedTheme: null,
            isPreloading: true,
            notifications: [],
            ajaxLoading: [],
            startMinimizingHeaderAt: 100,
            isHeaderBig: true,
            lastScrollPosition: 0,
            isHeaderHidden: false,
            isAnyFocus: false,
            isNavMenuOpen: false,
            navLinks: [
                { url: "#hero", title: { en: "Home", fr: "Accueil" } },
                { url: "#about", title: { en: "About", fr: "À propos" } },
                { url: "#skills", title: { en: "Skills", fr: "Compétences" } },
                { url: "#portfolio", title: { en: "Portfolio", fr: "Portfolio" } },
                { url: "#contact", title: { en: "Contact", fr: "Contact" } }
            ],
            skillsType: "",
            skillsItems: [
                { imgUrl: "assets/images/HTML5.png", title: "HTML5" },
                { imgUrl: "", title: "CSS3" },
                { imgUrl: "https://via.placeholder.com/48", title: "JavaScript" },
                { imgUrl: "https://via.placeholder.com/48", title: "TypeScript" },
                { imgUrl: "https://via.placeholder.com/48", title: "jQuery" },
                { imgUrl: "https://via.placeholder.com/48", title: "Bootstrap" },
                { imgUrl: "https://via.placeholder.com/48", title: "Angular" },
                { imgUrl: "https://via.placeholder.com/48", title: "React" },
                { imgUrl: "https://via.placeholder.com/48", title: "Vue" },
                { imgUrl: "https://via.placeholder.com/48", title: "Firebase" },
                { imgUrl: "https://via.placeholder.com/48", title: "PugJS" },
                { imgUrl: "https://via.placeholder.com/48", title: "SASS" }
            ],
            toolsItems: [
                { imgUrl: "https://via.placeholder.com/48", title: "Ajax" },
                { imgUrl: "https://via.placeholder.com/48", title: "Gulp" },
                { imgUrl: "https://via.placeholder.com/48", title: "Webpack" },
                { imgUrl: "https://via.placeholder.com/48", title: "Git (Github)" },
                { imgUrl: "https://via.placeholder.com/48", title: "Npm" },
                { imgUrl: "https://via.placeholder.com/48", title: "Command Line" },
                { imgUrl: "https://via.placeholder.com/48", title: "VS Code" },
                { imgUrl: "https://via.placeholder.com/48", title: "Trello" },
                { imgUrl: "https://via.placeholder.com/48", title: "ClickUp" },
                { imgUrl: "https://via.placeholder.com/48", title: "Slack" },
                { imgUrl: "https://via.placeholder.com/48", title: "Photoshop" },
                { imgUrl: "https://via.placeholder.com/48", title: "Adobe XD" }
            ],
            experienceItems: [
                {
                    date: "2023",
                    companyName: { en: "Polydisciplinary Faculty of Ouarzazate", fr: "Faculté Polydisciplinaire d'Ouarzazate" },
                    jobTitle: { en: "Full-Stack Developer", fr: "Développeur Full-Stack" },
                    desc: {
                        en: "I was involved in the design and development of a web application for automatic timetable generation. This included the implementation of optimization algorithms, specifically genetic algorithms, to enhance efficiency. The project utilized a technical stack that included Laravel, PHP, PhpMyAdmin, UML, HTML5, JS, and CSS3.",
                        fr: "J'ai participé à la conception et au développement d'une application web pour la génération automatique d'emplois du temps. Cela comprenait la mise en œuvre d'algorithmes d'optimisation, spécifiquement des algorithmes génétiques, pour améliorer l'efficacité. Le projet a utilisé une pile technique qui comprenait Laravel, PHP, PhpMyAdmin, UML, HTML5, JS et CSS3."
                    }
                },
                {
                    date: "2024",
                    companyName: { en: "3D Smart Factory", fr: "Usine 3D Intelligente" },
                    jobTitle: { en: "AI Developer", fr: "Développeur IA" },
                    desc: {
                        en: "Developed a Convolutional Neural Network (CNN) for the automatic classification of 3D dental models with 97% accuracy. Utilized Python, TensorFlow, Keras, NumPy, and Git. Collaborated effectively within an international team of data scientists.",
                        fr: "Développé un réseau de neurones convolutif (CNN) pour la classification automatique de modèles dentaires 3D avec une précision de 97 %. Utilisé Python, TensorFlow, Keras, NumPy et Git. Collaboration efficace au sein d'une équipe internationale de scientifiques des données."
                    }
                },
                {
                    date: "2024",
                    companyName: { en: "Personal Project", fr: "Projet Personnel" },
                    jobTitle: { en: "AI Researcher", fr: "Chercheur en IA" },
                    desc: {
                        en: "Developed a real-time flower recognition system with 95% accuracy using TensorFlow and Streamlit. Documented the project on GitHub.",
                        fr: "Développé un système de reconnaissance de fleurs en temps réel avec une précision de 95 % en utilisant TensorFlow et Streamlit. Documenté le projet sur GitHub."
                    }
                },
                {
                    date: "2025",
                    companyName: { en: "National School of Artificial Intelligence and Digitization", fr: "École Nationale d'Intelligence Artificielle et de Numérisation" },
                    jobTitle: { en: "Team Lead", fr: "Chef d'Équipe" },
                    desc: {
                        en: "Developed a groundbreaking sentiment analysis platform, and under the mentorship of Prof. Asmae Bentaleb. The platform features state-of-the-art ML models, dynamic 3D visualization, and advanced statistical analysis. It empowers businesses to understand customer emotions, track brand sentiment, and make data-driven decisions. Special thanks to Prof. Asmae Bentaleb for her guidance. Ideal for marketing, customer experience.",
                        fr: "Développé une plateforme d'analyse des sentiments révolutionnaire, sous la direction du Prof. Asmae Bentaleb. La plateforme présente des modèles ML de pointe, une visualisation 3D dynamique et une analyse statistique avancée. Elle permet aux entreprises de comprendre les émotions des clients, de suivre les sentiments de la marque et de prendre des décisions basées sur les données. Remerciements spéciaux au Prof. Asmae Bentaleb pour ses conseils. Idéal pour les équipes marketing, expérience client."
                    }
                },
                {
                    date: "?",
                    companyName: { en: "" },
                    jobTitle: { en: "", fr: "" },
                    desc: {
                        en: "",
                        fr: ""
                    }
                }
            ],
            portfolioItemsPage: 1,
            itemsPerPage: 7,
            filters: ["All", "IA", "Machine Learning", "Deep Learning", "Web Development", "Data Science"],
            currentFilter: "All",
            portfolioArchiveName: "",
            allPortfolioItems: [
                {
                    id: 1,
                    url: "single-portfolio.html?id=1",
                    imgUrl: "assets/images/Flower.png",
                    title: { en: "Real-Time Flower Classification", fr: "Classification des Fleurs en Temps Réel" },
                    date: { en: "May 2024", fr: "Mai 2024" },
                    desc: {
                        en: "Development of a real-time flower recognition system with 95% accuracy using TensorFlow and Streamlit. The project includes a user interface for real-time analysis and is documented on GitHub.",
                        fr: "Développement d'un système de reconnaissance de fleurs en temps réel avec une précision de 95 % en utilisant TensorFlow et Streamlit. Le projet comprend une interface utilisateur pour l'analyse en temps réel et est documenté sur GitHub."
                    },
                    category: "Deep Learning",
                    tools: ["Python", "TensorFlow", "Streamlit", "Docker", "Git"],
                    screenshots: {
                        img1: {
                            url: "assets/images/Flower1.png",
                            caption: { en: "Real-time flower recognition interface", fr: "Interface de reconnaissance de fleurs en temps réel" }
                        },
                        img2: {
                            url: "assets/images/Flower2.png",
                            caption: { en: "Model training process", fr: "Processus d'entraînement du modèle" }
                        },
                        img3: {
                            url: "assets/images/acc.png",
                            caption: { en: "Accuracy metrics", fr: "Métriques de précision" }
                        }
                    }
                },
                {
                    id: 2,
                    url: "single-portfolio.html?id=2",
                    imgUrl: "assets/images/Dental.png",
                    title: { en: "3D Dental Classification", fr: "Classification Dentaire 3D" },
                    date: { en: "August 2024", fr: "Août 2024" },
                    desc: {
                        en: "Development of a 3D dental classification model using a Convolutional Neural Network (CNN) with 97% accuracy. The project involved preprocessing 3D data and implementing the model with TensorFlow and Keras.",
                        fr: "Développement d'un modèle de classification dentaire 3D en utilisant un réseau de neurones convolutif (CNN) avec une précision de 97 %. Le projet comprenait le prétraitement des données 3D et la mise en œuvre du modèle avec TensorFlow et Keras."
                    },
                    category: "Deep Learning",
                    tools: ["Python", "TensorFlow", "Keras", "NumPy", "Git"],
                    screenshots: {
                        img1: {
                            url: "assets/images/Dental1.png",
                            caption: { en: "3D data preprocessing", fr: "Prétraitement des données 3D" }
                        },
                        img2: {
                            url: "assets/images/Dental2.png",
                            caption: { en: "Model implementation", fr: "Mise en œuvre du modèle" }
                        },
                        img3: {
                            url: "assets/images/Dental3.png",
                            caption: { en: "Accuracy metrics", fr: "Métriques de précision" }
                        }
                    }
                },
                {
                    id: 3,
                    url: "single-portfolio.html?id=3",
                    imgUrl: "assets/images/téléchargement1.jpg",
                    title: { en: "Web Application for Automatic Timetable Generation", fr: "Application Web pour la Génération Automatique d'Emplois du Temps" },
                    date: { en: "March 2023", fr: "Mars 2023" },
                    desc: {
                        en: "Development of a web application for automatic timetable generation using Laravel, PHP, and MySQL. The project included the implementation of optimization algorithms (genetic algorithms).",
                        fr: "Développement d'une application web pour la génération automatique d'emplois du temps en utilisant Laravel, PHP et MySQL. Le projet comprenait la mise en œuvre d'algorithmes d'optimisation (algorithmes génétiques)."
                    },
                    category: "Web Development",
                    tools: ["Laravel", "PHP", "MySQL", "JavaScript", "HTML", "CSS"],
                    screenshots: {
                        img1: {
                            url: "assets/images/emploi.png",
                            caption: { en: "User interface", fr: "Interface utilisateur" }
                        },
                        img2: {
                            url: "assets/images/emploi3.png",
                            caption: { en: "Algorithm implementation", fr: "Mise en œuvre de l'algorithme" }
                        },
                        img3: {
                            url: "assets/images/emploi2.png",
                            caption: { en: "Generated timetable", fr: "Emploi du temps généré" }
                        }
                    }
                },
                {
                    id: 4,
                    url: "single-portfolio.html?id=4",
                    imgUrl: "assets/images/custumer.gif",
                    title: { en: "Next-Generation Sentiment Analysis Platform!", fr: "Plateforme d'Analyse des Sentiments de Nouvelle Génération !" },
                    date: { en: "July 2025", fr: "Juillet 2025" },
                    desc: {
                        en: "Development of a next-generation sentiment analysis platform using state-of-the-art machine learning models, dynamic 3D sentiment visualization, enterprise-grade batch processing, advanced statistical analysis, and professional PDF reporting engine. The project included the implementation of multi-model sentiment analysis, advanced data visualization tools, streamlined batch processing pipelines, robust statistical analysis, and interactive dashboards and automated reporting.",
                        fr: "Développement d'une plateforme d'analyse des sentiments de nouvelle génération en utilisant des modèles d'apprentissage automatique de pointe, une visualisation des sentiments 3D dynamique, un traitement par lots de qualité entreprise, une analyse statistique avancée et un moteur de rapport PDF professionnel. Le projet comprenait la mise en œuvre d'une analyse des sentiments multi-modèles, des outils de visualisation des données avancés, des pipelines de traitement par lots rationalisés, une analyse statistique robuste, des tableaux de bord interactifs et une génération de rapports automatisée."
                    },
                    category: "AI",
                    tools: ["Python", "TensorFlow", "Keras", "NumPy", "Pandas", "Matplotlib", "Seaborn", "Streamlit", "Docker", "Git"],
                    screenshots: {
                        img1: {
                            url: "assets/images/custumer1.png",
                            caption: { en: "User interface", fr: "Interface utilisateur" }
                        },
                        img2: {
                            url: "assets/images/custumer2.png",
                            caption: { en: "Algorithm implementation", fr: "Mise en œuvre de l'algorithme" }
                        },
                        img3: {
                            url: "assets/images/custumer3.png",
                            caption: { en: "Generated Model", fr: "Modèle généré" }
                        }
                    }
                }
            ],
            portfolioItems: [],
            testimonialsItems: [
                {
                    imgUrl: "assets/images/Red Brown Illustrative Happy Man Avatar.png",
                    quoteContent: {
                        en: "Abdellah Ennajari has excelled in our Machine Learning and Deep Learning projects. His dedication, attention to detail, and innovative solutions have significantly contributed to our success. I highly recommend him for his exceptional skills and commitment.",
                        fr: "Abdellah Ennajari a excellé dans nos projets d'apprentissage automatique et d'apprentissage profond. Son dévouement, son souci du détail et ses solutions innovantes ont grandement contribué à notre succès. Je le recommande vivement pour ses compétences exceptionnelles et son engagement."
                    },
                    quoteAuthor: { en: "Asmae Bentaleb", fr: "Asmae Bentaleb" },
                    jobTitle: { en: "Professor of Machine Learning", fr: "Professeur d'Apprentissage Automatique" }
                },
                {
                    imgUrl: "assets/images/benAcha.png",
                    quoteContent: {
                        en: "Abdellah Ennajari has consistently delivered high-quality work. He is dedicated, creative, and a great team player. His strong communication skills make him an asset to any project. I highly recommend him for future endeavors.",
                        fr: "Abdellah Ennajari a constamment fourni un travail de haute qualité. Il est dévoué, créatif et un excellent coéquipier. Ses compétences en communication en font un atout pour tout projet. Je le recommande vivement pour ses futures entreprises."
                    },
                    quoteAuthor: { en: "Yassine Ben Acha", fr: "Yassine Ben Acha" },
                    jobTitle: { en: "AI Engineering Student at ENIAD", fr: "Étudiant en Ingénierie de l'IA à l'ENIAD" }
                },
                {
                    imgUrl: "assets/images/Red Brown Illustrative Happy Man Avatar (5).png",
                    quoteContent: {
                        en: "Abdellah Ennajari has shown exceptional interest and dedication in courses like Object-Oriented Design, Data Structures, and Software Engineering. He is creative, analytical, and always open to discussion. I recommend him for his strong academic skills.",
                        fr: "Abdellah Ennajari a montré un intérêt et un dévouement exceptionnels dans des cours tels que la conception orientée objet, les structures de données et l'ingénierie logicielle. Il est créatif, analytique et toujours ouvert à la discussion. Je le recommande pour ses solides compétences académiques."
                    },
                    quoteAuthor: { en: "Abdelhadi Bouain", fr: "Abdelhadi Bouain" },
                    jobTitle: { en: "Professor, Department of Computer Science", fr: "Professeur, Département d'Informatique" }
                },
                {
                    imgUrl: "assets/images/Red Brown Illustrative Happy Man Avatar (1).png",
                    quoteContent: {
                        en: "Abdellah Ennajari has demonstrated exceptional skills in AI engineering. His dedication, creativity, and problem-solving abilities make him a valuable asset to any team. I highly recommend him for his outstanding work and potential.",
                        fr: "Abdellah Ennajari a démontré des compétences exceptionnelles en ingénierie de l'IA. Son dévouement, sa créativité et ses capacités de résolution de problèmes en font un atout précieux pour toute équipe. Je le recommande vivement pour son travail exceptionnel et son potentiel."
                    },
                    quoteAuthor: { en: "Abdellatif Chakor", fr: "Abdellatif Chakor" },
                    jobTitle: { en: "AI Engineering Student at ENIAD", fr: "Étudiant en Ingénierie de l'IA à l'ENIAD" }
                },
                {
                    imgUrl: "assets/images/Red Brown Illustrative Happy Man Avatar (4).png",
                    quoteContent: {
                        en: "Abdellah Ennajari has shown exceptional dedication and competence in our project on faculty scheduling. His innovative solutions and problem-solving abilities have significantly contributed to its success. I highly recommend him for his outstanding work and potential.",
                        fr: "Abdellah Ennajari a fait preuve d'un dévouement et d'une compétence exceptionnels dans notre projet de planification des enseignants. Ses solutions innovantes et ses capacités de résolution de problèmes ont grandement contribué à son succès. Je le recommande vivement pour son travail exceptionnel et son potentiel."
                    },
                    quoteAuthor: { en: "Mohammed Laraqui", fr: "Mohammed Laraqui" },
                    jobTitle: { en: "Professor, Department of Computer Science", fr: "Professeur, Département d'Informatique" }
                },
                {
                    imgUrl: "assets/images/Red Brown Illustrative Happy Man Avatar (3).png",
                    quoteContent: {
                        en: "Abdellah Ennajari has shown great consistency and creativity in his studies. He has excellent communication, problem-solving, and organizational skills. I expect him to continue being productive and creative. I highly recommend him for his outstanding work.",
                        fr: "Abdellah Ennajari a montré une grande cohérence et créativité dans ses études. Il possède d'excellentes compétences en communication, en résolution de problèmes et en organisation. Je m'attends à ce qu'il continue à être productif et créatif. Je le recommande vivement pour son travail exceptionnel."
                    },
                    quoteAuthor: { en: "Ayoub Ellahyani", fr: "Ayoub Ellahyani" },
                    jobTitle: { en: "Professor, Department of Computer Science", fr: "Professeur, Département d'Informatique" }
                },
                {
                    imgUrl: "assets/images/Red Brown Illustrative Happy Man Avatar (6).png",
                    quoteContent: {
                        en: "Abdellah Ennajari is a hardworking student with excellent relational skills and dedication. I highly recommend him for your Master's program due to his enthusiasm and abilities, which make him a valuable candidate.",
                        fr: "Abdellah Ennajari est un étudiant travailleur avec d'excellentes compétences relationnelles et un dévouement. Je le recommande vivement pour votre programme de Master en raison de son enthousiasme et de ses capacités, qui en font un candidat de valeur."
                    },
                    quoteAuthor: { en: "Rachid Dakir", fr: "Rachid Dakir" },
                    jobTitle: { en: "Professor, Department of Computer Science", fr: "Professeur, Département d'Informatique" }
                },
                {
                    imgUrl: "assets/images/nour.png",
                    quoteContent: {
                        en: "Abdellah Ennajari demonstrated exceptional dedication, creativity, and problem-solving skills in his Final Year Project (PFE). His ability to apply theoretical knowledge to practical situations was impressive. I highly recommend him for his outstanding work and potential.",
                        fr: "Abdellah Ennajari a fait preuve d'un dévouement, d'une créativité et de compétences en résolution de problèmes exceptionnels dans son Projet de Fin d'Études (PFE). Sa capacité à appliquer les connaissances théoriques à des situations pratiques était impressionnante. Je le recommande vivement pour son travail exceptionnel et son potentiel."
                    },
                    quoteAuthor: { en: "Noureddine Oussakou", fr: "Noureddine Oussakou" },
                    jobTitle: { en: "High School Teacher", fr: "Professeur de Lycée" }
                },
                {
                    imgUrl: "assets/images/Red Brown Illustrative Happy Man Avatar (7).png",
                    quoteContent: {
                        en: "Abdellah Ennajari is a serious, rigorous, and diligent student. He has developed strong skills in specialized subjects such as software development and system architecture. I consider him an excellent candidate who will bring considerable satisfaction throughout his academic journey.",
                        fr: "Abdellah Ennajari est un étudiant sérieux, rigoureux et travailleur. Il a développé de solides compétences dans des matières spécialisées telles que le développement de logiciels et l'architecture des systèmes. Je le considère comme un excellent candidat qui apportera une satisfaction considérable tout au long de son parcours académique."
                    },
                    quoteAuthor: { en: "Mohcine Boudhane", fr: "Mohcine Boudhane" },
                    jobTitle: { en: "Computer Science Professor", fr: "Professeur en Informatique" }
                },
                {
                    imgUrl: "assets/images/Red Brown Illustrative Happy Man Avatar (2).png",
                    quoteContent: {
                        en: "As a professor at the Polydisciplinary Faculty of Ouarzazate, I have had the pleasure of teaching Mr. Ennajari Abdellah. He has consistently demonstrated diligence, curiosity, and a strong analytical mindset in his studies. I highly recommend him for his quality work and enthusiasm. Please feel free to contact me for further information.",
                        fr: "En tant que professeur à la Faculté Polydisciplinaire d'Ouarzazate, j'ai eu le plaisir d'enseigner à M. Ennajari Abdellah. Il a constamment fait preuve de diligence, de curiosité et d'un esprit analytique fort dans ses études. Je le recommande vivement pour la qualité de son travail et son enthousiasme. N'hésitez pas à me contacter pour plus d'informations."
                    },
                    quoteAuthor: { en: "Imane Dbibih", fr: "Imane Dbibih" },
                    jobTitle: { en: "Professor in Computer Science", fr: "Professeur en Informatique" }
                }
            ]
        }),
        created() {
            this.getAppTheme();
        },
        mounted() {
            window.innerWidth >= 992 && (this.initCircleCursor(), this.heroImgPanEffect(), this.initializeTilt());
            this.navMenuTabTrap();
            this.scrollingOptions();
            document.addEventListener("scroll", () => this.scrollingOptions());
            document.querySelectorAll(".has-ultimate-tooltip").forEach(e => {
                Popper.createPopper(e, e.querySelector(".ultimate-tooltip"), {
                    placement: "top",
                    modifiers: [{
                        name: "offset",
                        options: {
                            offset: [0, 30]
                        }
                    }]
                });
            });
            this.getPortfolioItems();
            new GLightbox({
                autoplayVideos: false
            });
            this.initSkillsFirstType();
        },
        methods: {
            initCircleCursor() {
                const appRef = this.$refs.appRef;
                const circleCursorOuter = this.$refs.circleCursorOuter;
                const circleCursorInner = this.$refs.circleCursorInner;
  
                if (circleCursorOuter && circleCursorInner) {
                    appRef.addEventListener("mousemove", e => {
                        circleCursorOuter.setAttribute("style", `visibility: visible; top: ${e.clientY}px; left: ${e.clientX}px;`);
                        circleCursorInner.setAttribute("style", `visibility: visible; top: ${e.clientY}px; left: ${e.clientX}px;`);
                        if (e.target.closest("a") || e.target.closest("button") || e.target.closest(".link-hover")) {
                            circleCursorInner.classList.add("cursor-link-hover");
                        } else {
                            circleCursorInner.classList.remove("cursor-link-hover");
                        }
                    });
  
                    appRef.addEventListener("click", () => {
                        circleCursorInner.classList.add("cursor-click-effect");
                        setTimeout(() => circleCursorInner.classList.remove("cursor-click-effect"), 200);
                    });
                }
            },
            getAppTheme() {
                const savedTheme = localStorage.getItem("nafieSavedTheme");
                if (savedTheme) {
                    this.savedTheme = savedTheme;
                } else if (window.matchMedia) {
                    this.savedTheme = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark_theme" : "light_theme";
                } else {
                    this.savedTheme = this.appTheme;
                }
                localStorage.setItem("nafieSavedTheme", this.savedTheme);
            },
            changeAppTheme() {
                this.savedTheme = this.savedTheme === "light_theme" ? "dark_theme" : "light_theme";
                localStorage.setItem("nafieSavedTheme", this.savedTheme);
            },
            toggleNavMenu() {
                this.isNavMenuOpen = !this.isNavMenuOpen;
                this.isNavMenuOpen ? this.openNavMenu() : this.closeNavMenu();
            },
            openNavMenu() {
                const body = document.getElementsByTagName("body")[0];
                this.isNavMenuOpen = true;
                body.setAttribute("style", "overflow-y: hidden;");
                this.$refs.headerNav.querySelector(".desktop-menu-content").focus();
            },
            closeNavMenu() {
                const body = document.getElementsByTagName("body")[0];
                this.isNavMenuOpen = false;
                body.removeAttribute("style");
                this.$refs.navMenuToggleBtn.focus();
            },
            navMenuTabTrap() {
                const headerNav = this.$refs.headerNav;
                let firstFocusableElement, lastFocusableElement, focusableElements;
  
                document.addEventListener("keyup", e => {
                    if (headerNav.classList.contains("menu-open")) {
                        focusableElements = [...headerNav.querySelectorAll('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex="0"]')]
                                           .filter(el => window.getComputedStyle(el).getPropertyValue("visibility") !== "hidden");
                        firstFocusableElement = focusableElements[0];
                        lastFocusableElement = focusableElements[focusableElements.length - 1];
  
                        if (e.code === "Tab") {
                            if (e.shiftKey && document.activeElement === firstFocusableElement) {
                                lastFocusableElement.focus();
                                e.preventDefault();
                            } else if (!e.shiftKey && document.activeElement === lastFocusableElement) {
                                firstFocusableElement.focus();
                                e.preventDefault();
                            }
                        } else if (e.code === "Escape") {
                            this.toggleNavMenu();
                        }
                    }
                });
            },
            heroImgPanEffect() {
                const heroSection = this.$refs.heroSection;
                if (!heroSection || !heroSection.getAttribute("data-paneffect")) return;
  
                const layers = heroSection.querySelectorAll(".layer");
                const layer1 = layers[0];
                const layer2 = layers[1];
  
                heroSection.addEventListener("mousemove", e => {
                    const x = (e.x - heroSection.getBoundingClientRect().x) / heroSection.offsetWidth * 100;
                    const y = (e.y - heroSection.getBoundingClientRect().y) / heroSection.offsetHeight * 100;
                    heroSection.classList.add("parallax-animation");
                    layer1.setAttribute("style", `transform-origin: ${x}vw ${y}vh;`);
                    layer2.setAttribute("style", `transform-origin: ${x}vw ${y}vh;`);
                });
            },
            scrollingOptions() {
                const scrollPosition = window.pageYOffset;
                this.isHeaderBig = !(scrollPosition >= this.startMinimizingHeaderAt);
                this.isHeaderHidden = scrollPosition > 100 && scrollPosition > this.lastScrollPosition;
                this.lastScrollPosition = scrollPosition;
            },
            scrollToTop() {
                window.scroll({
                    top: 0,
                    behavior: "smooth"
                });
            },
            initSkillsFirstType() {
                const skillsSwitchBtn = this.$refs.skillsSwitchBtn;
                if (skillsSwitchBtn) {
                    this.skillsType = skillsSwitchBtn.querySelector("input").value;
                }
            },
            initializeTilt() {
                const portfolioItems = this.$refs.portfolioItems;
                if (portfolioItems) {
                    VanillaTilt.init(portfolioItems.querySelectorAll(".portfolio-item"), {
                        max: 8,
                        speed: 400,
                        glare: true,
                        "max-glare": 0.3
                    });
                }
            },
            getPortfolioItems() {
                const filteredItems = this.allPortfolioItems.filter(item => {
                    const params = new URLSearchParams(window.location.search);
                    const tax = params.get("tax");
                    if (!tax) return "All" === this.currentFilter || item.category === this.currentFilter;
                    if ("cat" === tax) {
                        const cat = params.get("cat");
                        return this.portfolioArchiveName = cat, item.category === cat;
                    }
                    if ("tools" === tax) {
                        const tool = params.get("tools");
                        return this.portfolioArchiveName = tool, item.tools.includes(tool);
                    }
                }).slice(this.filteredPortfolioItems.length, this.portfolioItemsPage * this.itemsPerPage);
  
                if (filteredItems.length) {
                    this.portfolioItems.push(...filteredItems);
                    this.$nextTick(() => {
                        this.portfolioItemsPage > 1 && this.initializeTilt();
                        setTimeout(() => ScrollTrigger.refresh(), 500);
                    });
                    this.portfolioItemsPage++;
                } else {
                    this.setNotify({
                        className: "danger",
                        msg: this.$refs.portfolioItems.getAttribute("data-no-works-msg"),
                        time: 3000
                    });
                }
            },
            filterPortfolioItems(filter) {
                this.currentFilter = filter;
                this.portfolioItemsPage = 1;
                this.filteredPortfolioItems.length ? this.$nextTick(() => {
                    this.portfolioItemsPage > 1 && this.initializeTilt();
                    setTimeout(() => ScrollTrigger.refresh(), 500);
                }) : this.getPortfolioItems();
            },
            contactFormValidation() {
                const contactForm = this.$refs.contactForm;
                const nameInput = contactForm.querySelector('input[name="name"]');
                const emailInput = contactForm.querySelector('input[name="email"]');
                const phoneInput = contactForm.querySelector('input[name="phone"]');
                const messageInput = contactForm.querySelector("textarea");
  
                let errors = {
                    name: { required: false, minLength: false },
                    email: { required: false, invalid: false },
                    phone: { invalid: false },
                    message: { required: false }
                };
  
                if (nameInput.value === "") {
                    errors.name.required = true;
                    this.setNotify({
                        id: "nameRequired",
                        className: "danger",
                        msg: nameInput.closest(".control").querySelector(".errors-msgs .required").value
                    });
                } else {
                    errors.name.required = false;
                    this.dismissNotify("nameRequired");
                }
  
                if (nameInput.value.length > 0 && nameInput.value.length < nameInput.getAttribute("minlength")) {
                    errors.name.minLength = true;
                    this.setNotify({
                        id: "nameMinLength",
                        className: "danger",
                        msg: nameInput.closest(".control").querySelector(".errors-msgs .minLength").value
                    });
                } else {
                    errors.name.minLength = false;
                    this.dismissNotify("nameMinLength");
                }
  
                if (Object.values(errors.name).some(Boolean)) {
                    nameInput.classList.remove("valid");
                    nameInput.classList.add("invalid");
                } else {
                    nameInput.classList.remove("invalid");
                    nameInput.classList.add("valid");
                }
  
                if (emailInput.value === "") {
                    errors.email.required = true;
                    this.setNotify({
                        id: "emailRequired",
                        className: "danger",
                        msg: emailInput.closest(".control").querySelector(".errors-msgs .required").value
                    });
                } else {
                    errors.email.required = false;
                    this.dismissNotify("emailRequired");
                }
  
                if (emailInput.value.length > 0 && !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(emailInput.value)) {
                    errors.email.invalid = true;
                    this.setNotify({
                        id: "emailInvalid",
                        className: "danger",
                        msg: emailInput.closest(".control").querySelector(".errors-msgs .invalid").value
                    });
                } else {
                    errors.email.invalid = false;
                    this.dismissNotify("emailInvalid");
                }
  
                if (Object.values(errors.email).some(Boolean)) {
                    emailInput.classList.remove("valid");
                    emailInput.classList.add("invalid");
                } else {
                    emailInput.classList.remove("invalid");
                    emailInput.classList.add("valid");
                }
  
                if (phoneInput.value.length > 0 && !/^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/im.test(phoneInput.value)) {
                    errors.phone.invalid = true;
                    this.setNotify({
                        id: "phoneInvalid",
                        className: "danger",
                        msg: phoneInput.closest(".control").querySelector(".errors-msgs .invalid").value
                    });
                } else {
                    errors.phone.invalid = false;
                    this.dismissNotify("phoneInvalid");
                }
  
                if (Object.values(errors.phone).some(Boolean)) {
                    phoneInput.classList.remove("valid");
                    phoneInput.classList.add("invalid");
                } else {
                    phoneInput.classList.remove("invalid");
                    phoneInput.classList.add("valid");
                }
  
                if (messageInput.value === "") {
                    errors.message.required = true;
                    this.setNotify({
                        id: "messageRequired",
                        className: "danger",
                        msg: messageInput.closest(".control").querySelector(".errors-msgs .required").value
                    });
                } else {
                    errors.message.required = false;
                    this.dismissNotify("messageRequired");
                }
  
                if (Object.values(errors.message).some(Boolean)) {
                    messageInput.classList.remove("valid");
                    messageInput.classList.add("invalid");
                } else {
                    messageInput.classList.remove("invalid");
                    messageInput.classList.add("valid");
                }
  
                if (!Object.values(errors).some(e => Object.values(e).some(Boolean))) {
                    this.sendContactFormMessage(contactForm);
                }
            },
            sendContactFormMessage(form) {
                const action = form.getAttribute("action");
                const formData = new FormData(form);
                this.startLoading();
                fetch(action, {
                    method: "POST",
                    body: formData
                }).then(response => response.text()).then(text => {
                    if (text === "success") {
                        this.setNotify({
                            className: "success",
                            msg: form.getAttribute("data-success-msg"),
                            time: 5000
                        });
                        form.reset();
                        form.querySelectorAll(".valid").forEach(el => el.classList.remove("valid"));
                    } else if (text === "error") {
                        this.setNotify({
                            className: "danger",
                            msg: form.getAttribute("data-err-msg"),
                            time: 5000
                        });
                    }
                    this.endLoading();
                }).catch(error => console.log(error));
            },
            setNotify({ id, className, msg, time }) {
                const notification = {
                    id: id || `${Date.now()}${this.notifications.length}`,
                    className: className,
                    msg: msg,
                    time: time
                };
                if (id) {
                    if (!this.notifications.some(n => n.id === id)) {
                        this.notifications.push(notification);
                    }
                } else {
                    this.notifications.push(notification);
                }
                if (time) {
                    setTimeout(() => this.dismissNotify(notification.id), time);
                }
            },
            dismissNotify(id) {
                const index = this.notifications.findIndex(n => n.id === id);
                if (index > -1) {
                    this.notifications.splice(index, 1);
                }
            },
            startLoading() {
                this.ajaxLoading.push(true);
            },
            endLoading() {
                this.ajaxLoading.pop();
            }
        },
        computed: {
            isAjaxLoading() {
                return this.ajaxLoading.some(loading => loading === true);
            },
            experienceYears() {
                return new Date(new Date - new Date(String(this.careerStartDate))).getFullYear() - 1970;
            },
            experienceChunks() {
                return [...Array(Math.floor((this.experienceItems.length - 1) / 3))];
            },
            filteredPortfolioItems() {
                return new URLSearchParams(window.location.search).get("tax") ? this.portfolioItems : this.portfolioItems.filter(item => "All" === this.currentFilter || item.category === this.currentFilter);
            },
            getSinglePortfolioItem() {
                const id = new URLSearchParams(window.location.search).get("id");
                return this.allPortfolioItems.find(item => item.id == id);
            },
            copyrightDate() {
                const yearsDiff = new Date(new Date - new Date(String(this.copyrightStartDate))).getFullYear() - 1970;
                return yearsDiff === 0 ? this.copyrightStartDate : `${this.copyrightStartDate} - ${this.copyrightStartDate + yearsDiff}`;
            }
        },
        directives: {
            clone: {
                mounted(el) {
                    el.parentNode.insertBefore(el.cloneNode(true), el.nextSibling);
                }
            },
            staggerdelay: {
                mounted(el, binding) {
                    [...el.children].forEach((child, index) => {
                        child.setAttribute("style", `animation-delay: ${(index + 1) * (binding.value || 100)}ms`);
                    });
                }
            },
            tooltip: {
                mounted(el, binding) {
                    el.classList.add("has-tooltip");
                    el.insertAdjacentHTML("beforeend", `<div class="custom-tooltip custom-tooltip-${binding.value.dir}">${binding.value.text}</div>`);
                }
            }
        }
    }).mount("#app");
  }();
  